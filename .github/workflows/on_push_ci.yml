name: Test & Deploy
#on: [push]
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2-beta
    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
        #ruby-version: 2.7 # Not necessary if .ruby-version is given

    - name: 'Install dependencies'
      run: |
        npm install
        bundle config set path 'vendor/bundle'
        bundle install --jobs 4 --retry 3

    - name: 'Get commit info'
      run: |
        echo "COMMIT_ACTOR_NAME=${{ github.actor }}" | awk -F '-preview' '{print $1}' >> $GITHUB_ENV
        echo "COMMIT_SHORT_SHA=`git rev-parse --short=8 ${{ github.sha }}`"           >> $GITHUB_ENV
        
    - name: 'Generate files and test them statically'
      run: |
        bundle exec rake assets:precompile
        bundle exec rake test SKIP_BUILD=true
        bundle exec rspec spec/qiita.rb

    - name: 'Notify test results to Idobata (Failed)'
      if:   failure() && (env.IDOBATA_SECRETS != null)
      uses: mahaker/actions-idobata@v1.1.1
      with:
        hookUrl: ${{ secrets.IDOBATA_GITHUB_ACTIONS }}
        format: 'html'
        message: |
          <div>
          CI build for <a href='https://github.com/${{ github.repository }}'>${{ github.repository }}</a> : <span class='label label-danger'>Failure</span> (<a href='https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'>GitHub Actions</a>)<br>
          <img src='https://github.com/${{ env.COMMIT_ACTOR_NAME }}.png' class='icon-rounded' width='16' height='16'> <a href='https://github.com/${{ env.COMMIT_ACTOR_NAME }}'>${{ env.COMMIT_ACTOR_NAME }}</a>: ${{ github.event.head_commit.message }} (<a href='https://github.com/${{ github.repository }}/commit/${{ github.sha }}'>${{ env.COMMIT_SHORT_SHA }}</a>)
          </div>

    - name: 'Notify test results to Idobata (Success)'
      if:   success() && (env.IDOBATA_SECRETS != null)
      uses: mahaker/actions-idobata@v1.1.1
      with:
        hookUrl: ${{ secrets.IDOBATA_GITHUB_ACTIONS }}
        format: 'html'
        message: |
          <div>
          CI build for <a href='https://github.com/${{ github.repository }}'>${{ github.repository }}</a> : <span class='label label-success'>Success</span> (<a href='https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'>GitHub Actions</a>)<br>
          <img src='https://github.com/${{ env.COMMIT_ACTOR_NAME }}.png' class='icon-rounded' width='16' height='16'> <a href='https://github.com/${{ env.COMMIT_ACTOR_NAME }}'>${{ env.COMMIT_ACTOR_NAME }}</a>: ${{ github.event.head_commit.message }} (<a href='https://github.com/${{ github.repository }}/commit/${{ github.sha }}'>${{ env.COMMIT_SHORT_SHA }}</a>)
          </div>

  deploy:
    if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master' }}
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - uses: ruby/setup-ruby@v1
      #with:
        #bundler-cache: true
        #ruby-version: 2.7 # Not necessary if .ruby-version is given
    - name: 'Deploy to Heroku if test suite passed'
      uses: akhileshns/heroku-deploy@v3.4.6
      with:
        branch:          'master'
        usedocker:       false
        heroku_api_key:   ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: 'yasslab-jp'
        heroku_email:    'yohei@yasslab.jp'
        healthcheck:     'https://yasslab.jp/health'

